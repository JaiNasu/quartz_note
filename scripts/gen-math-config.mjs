// scripts/gen-math-config.mjs (バグ修正版)
import fs from "fs/promises"
import path from "path"

const preamblePath = path.resolve("content/preamble.sty")
const outputPath = path.resolve("quartz/plugins/transformers/katex-macros.ts")

// --- 修正箇所：4つの正規表現から '?' を削除 ---
const patterns = {
  // \newcommand{\cmd}{definition}
  newCommand: /\\newcommand{\\(\w+)}{(.+)}/g, // ? を削除
  // \newcommand{\cmd}[n]{definition}
  newCommandWithArgs: /\\newcommand{\\(\w+)}\[(\d)\]{(.+)}/g, // ? を削除
  // \renewcommand{\cmd}{definition}
  renewCommand: /\\renewcommand{\\(\w+)}{(.+)}/g, // ? を削除
  // \renewcommand{\cmd}[n]{definition}
  renewCommandWithArgs: /\\renewcommand{\\(\w+)}\[(\d)\]{(.+)}/g, // ? を削除
  // \DeclareMathOperator{\cmd}{definition} - こちらは元々 '?' がないので変更なし
  operator: /\\DeclareMathOperator{\\(\w+)}{(.+?)}/g,
}

async function parsePreamble() {
  try {
    console.log("Reading preamble from:", preamblePath)
    const preambleContent = await fs.readFile(preamblePath, "utf-8")
    const lines = preambleContent.split("\n").filter((line) => !line.trim().startsWith("%"))

    const customMacros = {}

    for (const line of lines) {
      for (const match of line.matchAll(patterns.newCommand)) {
        const [_, cmd, def] = match
        customMacros["\\" + cmd] = def.replace(/\\/g, "\\")
      }
      for (const match of line.matchAll(patterns.newCommandWithArgs)) {
        const [_, cmd, args, def] = match
        customMacros["\\" + cmd] = [def.replace(/\\/g, "\\\\"), parseInt(args)]
      }
      for (const match of line.matchAll(patterns.renewCommand)) {
        const [_, cmd, def] = match
        customMacros["\\" + cmd] = def.replace(/\\/g, "\\\\")
      }
      for (const match of line.matchAll(patterns.renewCommandWithArgs)) {
        const [_, cmd, args, def] = match
        customMacros["\\" + cmd] = [def.replace(/\\/g, "\\\\"), parseInt(args)]
      }
      for (const match of line.matchAll(patterns.operator)) {
        const [_, cmd, def] = match
        customMacros["\\" + cmd] = `\\\\operatorname{${def}}`
      }
    }

    const outputContent = `// This file is auto-generated by scripts/gen-math-config.mjs. DO NOT EDIT.
export const customMacros = ${JSON.stringify(customMacros, null, 2)};
`
    await fs.writeFile(outputPath, outputContent, "utf-8")
    console.log("Successfully generated custom macros at:", outputPath)
  } catch (error) {
    console.error("Error generating custom macros:", error.message)
    if (error.code === "ENOENT") {
      console.error("Make sure your preamble file exists at:", preamblePath)
    }
  }
}

parsePreamble()
